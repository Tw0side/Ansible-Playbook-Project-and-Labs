Ansible Playbooks ProLug Labs

ANSIBLE INTRO

Scenario -1

Lab-1



Your team has decided they need a tool they can use to control and operate the many servers you have in your environment. You have been tasked with evaluating Ansible.

Install Ansible and put the version output in a file called /root/version.

SOLUTION:

controlplane $ apt -y install ansible --INSTALLING ANSIBLE
Reading package lists... Done
Building dependency tree       
Reading state information... Done
The following additional packages will be installed:
  python3-argcomplete python3-crypto python3-dnspython python3-jmespath
  python3-kerberos python3-libcloud python3-lockfile python3-ntlm-auth
  python3-requests-kerberos python3-requests-ntlm python3-selinux python3-winrm
  python3-xmltodict
Suggested packages:
  cowsay sshpass python-lockfile-doc
The following NEW packages will be installed:
  ansible python3-argcomplete python3-crypto python3-dnspython python3-jmespath
  python3-kerberos python3-libcloud python3-lockfile python3-ntlm-auth
  python3-requests-kerberos python3-requests-ntlm python3-selinux python3-winrm
  python3-xmltodict
0 upgraded, 14 newly installed, 0 to remove and 170 not upgraded.
Need to get 7819 kB of archives.
After this operation, 78.7 MB of additional disk space will be used.
Get:1 http://archive.ubuntu.com/ubuntu focal/main amd64 python3-crypto amd64 2.6.1-13ubuntu2 [237 kB]
Get:2 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 python3-dnspython all 1.16.0-1ubuntu1 [89.2 kB]
Get:3 http://archive.ubuntu.com/ubuntu focal/universe amd64 ansible all 2.9.6+dfsg-1 [5794 kB]
Get:4 http://archive.ubuntu.com/ubuntu focal/universe amd64 python3-argcomplete all 1.8.1-1.3ubuntu1 [27.2 kB]
Get:5 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 python3-jmespath all 0.9.4-2ubuntu1 [21.5 kB]
Get:6 http://archive.ubuntu.com/ubuntu focal/universe amd64 python3-kerberos amd64 1.1.14-3.1build1 [22.6 kB]
Get:7 http://archive.ubuntu.com/ubuntu focal/main amd64 python3-lockfile all 1:0.12.2-2ubuntu2 [14.6 kB]
Get:8 http://archive.ubuntu.com/ubuntu focal/universe amd64 python3-libcloud all 2.8.0-1 [1403 kB]
Get:9 http://archive.ubuntu.com/ubuntu focal/universe amd64 python3-ntlm-auth all 1.1.0-1 [19.6 kB]
Get:10 http://archive.ubuntu.com/ubuntu focal/universe amd64 python3-requests-kerberos all 0.12.0-2 [11.9 kB]
Get:11 http://archive.ubuntu.com/ubuntu focal/universe amd64 python3-requests-ntlm all 1.1.0-1 [6004 B]
Get:12 http://archive.ubuntu.com/ubuntu focal/universe amd64 python3-selinux amd64 3.0-1build2 [139 kB]
Get:13 http://archive.ubuntu.com/ubuntu focal/universe amd64 python3-xmltodict all 0.12.0-1 [12.6 kB]
Get:14 http://archive.ubuntu.com/ubuntu focal/universe amd64 python3-winrm all 0.3.0-2 [21.7 kB]
Fetched 7819 kB in 0s (30.8 MB/s)    
Selecting previously unselected package python3-crypto.
(Reading database ... 132628 files and directories currently installed.)
Preparing to unpack .../00-python3-crypto_2.6.1-13ubuntu2_amd64.deb ...
Unpacking python3-crypto (2.6.1-13ubuntu2) ...
Selecting previously unselected package python3-dnspython.
Preparing to unpack .../01-python3-dnspython_1.16.0-1ubuntu1_all.deb ...
Unpacking python3-dnspython (1.16.0-1ubuntu1) ...
Selecting previously unselected package ansible.
Preparing to unpack .../02-ansible_2.9.6+dfsg-1_all.deb ...
Unpacking ansible (2.9.6+dfsg-1) ...
Selecting previously unselected package python3-argcomplete.
Preparing to unpack .../03-python3-argcomplete_1.8.1-1.3ubuntu1_all.deb ...
Unpacking python3-argcomplete (1.8.1-1.3ubuntu1) ...
Selecting previously unselected package python3-jmespath.
Preparing to unpack .../04-python3-jmespath_0.9.4-2ubuntu1_all.deb ...
Unpacking python3-jmespath (0.9.4-2ubuntu1) ...
Selecting previously unselected package python3-kerberos.
Preparing to unpack .../05-python3-kerberos_1.1.14-3.1build1_amd64.deb ...
Unpacking python3-kerberos (1.1.14-3.1build1) ...
Selecting previously unselected package python3-lockfile.
Preparing to unpack .../06-python3-lockfile_1%3a0.12.2-2ubuntu2_all.deb ...
Unpacking python3-lockfile (1:0.12.2-2ubuntu2) ...
Selecting previously unselected package python3-libcloud.
Preparing to unpack .../07-python3-libcloud_2.8.0-1_all.deb ...
Unpacking python3-libcloud (2.8.0-1) ...
Selecting previously unselected package python3-ntlm-auth.
Preparing to unpack .../08-python3-ntlm-auth_1.1.0-1_all.deb ...
Unpacking python3-ntlm-auth (1.1.0-1) ...
Selecting previously unselected package python3-requests-kerberos.
Preparing to unpack .../09-python3-requests-kerberos_0.12.0-2_all.deb ...
Unpacking python3-requests-kerberos (0.12.0-2) ...
Selecting previously unselected package python3-requests-ntlm.
Preparing to unpack .../10-python3-requests-ntlm_1.1.0-1_all.deb ...
Unpacking python3-requests-ntlm (1.1.0-1) ...
Selecting previously unselected package python3-selinux.
Preparing to unpack .../11-python3-selinux_3.0-1build2_amd64.deb ...
Unpacking python3-selinux (3.0-1build2) ...
Selecting previously unselected package python3-xmltodict.
Preparing to unpack .../12-python3-xmltodict_0.12.0-1_all.deb ...
Unpacking python3-xmltodict (0.12.0-1) ...
Selecting previously unselected package python3-winrm.
Preparing to unpack .../13-python3-winrm_0.3.0-2_all.deb ...
Unpacking python3-winrm (0.3.0-2) ...
Setting up python3-lockfile (1:0.12.2-2ubuntu2) ...
Setting up python3-ntlm-auth (1.1.0-1) ...
Setting up python3-kerberos (1.1.14-3.1build1) ...
Setting up python3-xmltodict (0.12.0-1) ...
Setting up python3-jmespath (0.9.4-2ubuntu1) ...
Setting up python3-requests-kerberos (0.12.0-2) ...
Setting up python3-dnspython (1.16.0-1ubuntu1) ...
Setting up python3-selinux (3.0-1build2) ...
Setting up python3-crypto (2.6.1-13ubuntu2) ...
Setting up ansible (2.9.6+dfsg-1) ...
Setting up python3-argcomplete (1.8.1-1.3ubuntu1) ...
Setting up python3-requests-ntlm (1.1.0-1) ...
Setting up python3-libcloud (2.8.0-1) ...
Setting up python3-winrm (0.3.0-2) ...
Processing triggers for man-db (2.9.1-1) ...
controlplane $ ansible --version  --CHECKING ANSIBLE VERSION
ansible 2.9.6
  config file = /etc/ansible/ansible.cfg
  configured module search path = ['/root/.ansible/plugins/modules', '/usr/share/ansible/plugins/modules']
  ansible python module location = /usr/lib/python3/dist-packages/ansible
  executable location = /usr/bin/ansible
  python version = 3.8.10 (default, Nov 22 2023, 10:22:35) [GCC 9.4.0]
controlplane $ ansible --version >> /root/version --SAVING THE VERSION TO A FILE

Lab -2

Check ansible-doc and see how many modules you have. Then read the documentation of modules setup and copy.

Save the number of modules you have into the file /root/modules.


SOLUTION:

##Check ansible-doc help

controlplane $ ansible-doc --help
usage: ansible-doc [-h] [--version] [-v] [-M MODULE_PATH] [--playbook-dir BASEDIR]
                   [-t {become,cache,callback,cliconf,connection,httpapi,inventory,lookup,netconf,shell,module,strategy,vars}]
                   [-j] [-F | -l | -s | --metadata-dump]
                   [plugin [plugin ...]]

plugin documentation tool

positional arguments:
  plugin                Plugin

optional arguments:
  --metadata-dump       **For internal testing only** Dump json metadata for all
                        plugins.
  --playbook-dir BASEDIR
                        Since this tool does not use playbooks, use this as a
                        substitute playbook directory.This sets the relative path
                        for many features including roles/ group_vars/ etc.
  --version             show program's version number, config file location,
                        configured module search path, module location, executable
                        location and exit
  -F, --list_files      Show plugin names and their source files without summaries
                        (implies --list)
  -M MODULE_PATH, --module-path MODULE_PATH
                        prepend colon-separated path(s) to module library (default=
                        ~/.ansible/plugins/modules:/usr/share/ansible/plugins/modul
                        es)
  -h, --help            show this help message and exit
  -j, --json            Change output into json format.
  -l, --list            List available plugins
  -s, --snippet         Show playbook snippet for specified plugin(s)
  -t {become,cache,callback,cliconf,connection,httpapi,inventory,lookup,netconf,shell,module,strategy,vars}, --type {become,cache,callback,cliconf,connection,httpapi,inventory,lookup,netconf,shell,module,strategy,vars}
                        Choose which plugin type (defaults to "module"). Available
                        plugin types are : ('become', 'cache', 'callback',
                        'cliconf', 'connection', 'httpapi', 'inventory', 'lookup',
                        'netconf', 'shell', 'module', 'strategy', 'vars')
  -v, --verbose         verbose mode (-vvv for more, -vvvv to enable connection
                        debugging)

See man pages for Ansible CLI options or website for tutorials
https://docs.ansible.com



##Check all the modules and store them in a file /root/modules

controlplane $ ansible-doc -l | wc -l
3387
controlplane $ ansible-doc -l | wc -l /root/modules
wc: /root/modules: No such file or directory
ERROR! Unexpected Exception, this is probably a bug: [Errno 32] Broken pipe
Exception ignored in: <_io.TextIOWrapper name='<stdout>' mode='w' encoding='utf-8'>
BrokenPipeError: [Errno 32] Broken pipe


##Read the documentation on copy module (may have to hit q to exit)


controlplane $ ansible-doc -s copy
- name: Copy files to remote locations
  copy:
      attributes:            # The attributes the resulting file or directory should
                               have. To get supported
                               flags look at the man
                               page for `chattr' on
                               the target system.
                               This string should
                               contain the attributes
                               in the same order as
                               the one displayed by
                               `lsattr'. The `='
                               operator is assumed as
                               default, otherwise `+'
                               or `-' operators need
                               to be included in the
                               string.
      backup:                # Create a backup file including the timestamp
                               information so you can
                               get the original file
                               back if you somehow
                               clobbered it
                               incorrectly.
      checksum:              # SHA1 checksum of the file being transferred. Used to
                               validate that the copy
                               of the file was
                               successful. If this is
                               not provided, ansible
                               will use the local
                               calculated checksum of
                               the src file.
      content:               # When used instead of `src', sets the contents of a
                               file directly to the
                               specified value. Works
                               only when `dest' is a
                               file. Creates the file
                               if it does not exist.
                               For advanced
                               formatting or if
                               `content' contains a
                               variable, use the
                               [template] module.
      decrypt:               # This option controls the autodecryption of source
                               files using vault.
      dest:                  # (required) Remote absolute path where the file should
                               be copied to. If `src'
                               is a directory, this
                               must be a directory
                               too. If `dest' is a
                               non-existent path and
                               if either `dest' ends
                               with "/" or `src' is a
                               directory, `dest' is
                               created. If `dest' is
                               a relative path, the
                               starting directory is
                               determined by the
                               remote host. If `src'
                               and `dest' are files,
                               the parent directory
                               of `dest' is not
                               created and the task
                               fails if it does not
                               already exist.
      directory_mode:        # When doing a recursive copy set the mode for the
                               directories. If this
                               is not set we will use
                               the system defaults.
                               The mode is only set
                               on directories which
                               are newly created, and
                               will not affect those
                               that already existed.
      follow:                # This flag indicates that filesystem links in the
                               destination, if they
                               exist, should be
                               followed.
      force:                 # Influence whether the remote file must always be
                               replaced. If `yes',
                               the remote file will
                               be replaced when
                               contents are different
                               than the source. If
                               `no', the file will
                               only be transferred if
                               the destination does
                               not exist. Alias
                               `thirsty' has been
                               deprecated and will be
                               removed in 2.13.
      group:                 # Name of the group that should own the file/directory,
                               as would be fed to
                               `chown'.
      local_follow:          # This flag indicates that filesystem links in the
                               source tree, if they
                               exist, should be
                               followed.
      mode:                  # The permissions of the destination file or directory.
                               For those used to
                               `/usr/bin/chmod'
                               remember that modes
                               are actually octal
                               numbers. You must
                               either add a leading
                               zero so that Ansible's
                               YAML parser knows it
                               is an octal number
                               (like `0644' or
                               `01777')or quote it
                               (like `'644'' or
                               `'1777'') so Ansible
                               receives a string and
                               can do its own
                               conversion from string
                               into number. Giving
                               Ansible a number
                               without following one
                               of these rules will
                               end up with a decimal
                               number which will have
                               unexpected results. As
                               of Ansible 1.8, the
                               mode may be specified
                               as a symbolic mode
                               (for example, `u+rwx'
                               or `u=rw,g=r,o=r'). As
                               of Ansible 2.3, the
                               mode may also be the
                               special string
                               `preserve'. `preserve'
                               means that the file
                               will be given the same
                               permissions as the
                               source file.
      owner:                 # Name of the user that should own the file/directory,
                               as would be fed to
                               `chown'.
      remote_src:            # Influence whether `src' needs to be transferred or
                               already is present
                               remotely. If `no', it
                               will search for `src'
                               at originating/master
                               machine. If `yes' it
                               will go to the
                               remote/target machine
                               for the `src'.
                               `remote_src' supports
                               recursive copying as
                               of version 2.8.
                               `remote_src' only
                               works with
                               `mode=preserve' as of
                               version 2.6.
      selevel:               # The level part of the SELinux file context. This is
                               the MLS/MCS attribute,
                               sometimes known as the
                               `range'. When set to
                               `_default', it will
                               use the `level'
                               portion of the policy
                               if available.
      serole:                # The role part of the SELinux file context. When set
                               to `_default', it will
                               use the `role' portion
                               of the policy if
                               available.
      setype:                # The type part of the SELinux file context. When set
                               to `_default', it will
                               use the `type' portion
                               of the policy if
                               available.
      seuser:                # The user part of the SELinux file context. By default
                               it uses the `system'
                               policy, where
                               applicable. When set
                               to `_default', it will
                               use the `user' portion
                               of the policy if
                               available.
      src:                   # Local path to a file to copy to the remote server.
                               This can be absolute
                               or relative. If path
                               is a directory, it is
                               copied recursively. In
                               this case, if path
                               ends with "/", only
                               inside contents of
                               that directory are
                               copied to destination.
                               Otherwise, if it does
                               not end with "/", the
                               directory itself with
                               all contents is
                               copied. This behavior
                               is similar to the
                               `rsync' command line
                               tool.
      unsafe_writes:         # Influence when to use atomic operation to prevent
                               data corruption or
                               inconsistent reads
                               from the target file.
                               By default this module
                               uses atomic operations
                               to prevent data
                               corruption or
                               inconsistent reads
                               from the target files,
                               but sometimes systems
                               are configured or just
                               broken in ways that
                               prevent this. One
                               example is docker
                               mounted files, which
                               cannot be updated
                               atomically from inside
                               the container and can
                               only be written in an
                               unsafe manner. This
                               option allows Ansible
                               to fall back to unsafe
                               methods of updating
                               files when atomic
                               operations fail
                               (however, it doesn't
                               force Ansible to
                               perform unsafe
                               writes). IMPORTANT!
                               Unsafe writes are
                               subject to race
                               conditions and can
                               lead to data
                               corruption.
      validate:              # The validation command to run before copying into
                               place. The path to the
                               file to validate is
                               passed in via '%s'
                               which must be present
                               as in the examples
                               below. The command is
                               passed securely so
                               shell features like
                               expansion and pipes
                               will not work.


#Read the documentation on setup module (may have to hit q to exit).


controlplane $ ansible-doc -s setup
- name: Gathers facts about remote hosts
  setup:
      fact_path:             # Path used for local ansible facts (`*.fact') - files
                               in this dir will be
                               run (if executable)
                               and their results be
                               added to
                               `ansible_local' facts
                               if a file is not
                               executable it is read.
                               Check notes for
                               Windows options. (from
                               2.1 on) File/results
                               format can be JSON or
                               INI-format. The
                               default `fact_path'
                               can be specified in
                               `ansible.cfg' for when
                               setup is automatically
                               called as part of
                               `gather_facts'.
      filter:                # If supplied, only return facts that match this shell-
                               style (fnmatch)
                               wildcard.
      gather_subset:         # If supplied, restrict the additional facts collected
                               to the given subset.
                               Possible values:
                               `all', `min',
                               `hardware', `network',
                               `virtual', `ohai', and
                               `facter'. Can specify
                               a list of values to
                               specify a larger
                               subset. Values can
                               also be used with an
                               initial `!' to specify
                               that that specific
                               subset should not be
                               collected.  For
                               instance: `!hardware,!
                               network,!virtual,!ohai
                               ,!facter'. If `!all'
                               is specified then only
                               the min subset is
                               collected. To avoid
                               collecting even the
                               min subset, specify
                               `!all,!min'. To
                               collect only specific
                               facts, use
                               `!all,!min', and
                               specify the particular
                               fact subsets. Use the
                               filter parameter if
                               you do not want to
                               display some collected
                               facts.
      gather_timeout:        # Set the default timeout in seconds for individual
                               fact gathering.












